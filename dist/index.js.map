{"version":3,"file":"index.js","sources":["../src/listener.ts","../src/core.ts","../src/index.ts"],"sourcesContent":["import DeepStateObserverCore from \"./core\";\n\nexport type WatchCompareCallback = () => boolean;\n\nexport type WatcherType = \"watcher\";\nexport const WATCHER_TYPE = \"watcher\";\n\nexport interface Watcher {\n  type: WatcherType;\n  path: string;\n  callback: WatchCompareCallback;\n}\n\nexport type Watchers = Watcher[];\n\nexport type WatchCallbacks = WatchCompareCallback[];\n\nexport type ComputeCallback = () => boolean;\n\nexport type ComputationType = \"computation\";\nexport const COMPUTATION_TYPE = \"computation\";\n\nexport interface Computation {\n  type: ComputationType;\n  callback: ComputeCallback;\n}\n\nexport type Computations = Computation[];\n\nexport type UpdateCallback = () => boolean;\n\nexport type UpdaterType = \"updater\";\nexport const UPDATER_TYPE = \"updater\";\n\nexport interface Updater {\n  type: UpdaterType;\n  path: string;\n  callback: UpdateCallback;\n}\n\nexport type Updaters = Updater[];\n\nclass DeepStateListener {\n  readonly state: DeepStateObserverCore;\n  readonly name: string;\n  readonly id: number;\n  private readonly watchers: Watchers;\n  private readonly computations: Computations;\n  private readonly updaters: Updaters;\n  private active: boolean;\n\n  constructor(state: DeepStateObserverCore, name: string) {\n    this.state = state;\n    this.id = state.createListenerId();\n    this.name = name;\n    this.watchers = [];\n    this.computations = [];\n    this.updaters = [];\n    this.active = true;\n    this.state.addListener(this);\n  }\n\n  isActive() {\n    return this.active;\n  }\n\n  deactivate() {\n    this.active = false;\n  }\n\n  activate() {\n    this.active = true;\n  }\n\n  watch(path: string, compareCallback: WatchCompareCallback) {\n    this.watchers.push({ type: WATCHER_TYPE, path, callback: compareCallback });\n  }\n\n  getWatchers() {\n    return this.watchers;\n  }\n\n  compute(computeCallback: ComputeCallback) {\n    this.computations.push({ type: COMPUTATION_TYPE, callback: computeCallback });\n  }\n\n  getComputations() {\n    return this.computations;\n  }\n\n  update(path: string, updateCallback: UpdateCallback) {\n    this.updaters.push({ type: UPDATER_TYPE, path, callback: updateCallback });\n  }\n\n  getUpdaters() {\n    return this.updaters;\n  }\n\n  destroy() {\n    this.active = false;\n    this.state.destroyListener(this);\n  }\n}\n\nexport default DeepStateListener;\n","import DeepStateListener, { WATCHER_TYPE, COMPUTATION_TYPE, UPDATER_TYPE } from \"./listener\";\n\nexport interface ListenersById {\n  [key: number]: DeepStateListener;\n}\n\nclass DeepStateObserverCore {\n  private lastListenerId: number;\n  private listenersById: ListenersById;\n  private data: any;\n\n  constructor(data: object = {}) {\n    this.lastListenerId = 0;\n    this.listenersById = {};\n    this.data = data;\n  }\n\n  getData() {\n    return this.data;\n  }\n\n  createListener(listenerName: string) {\n    return new DeepStateListener(this, listenerName);\n  }\n\n  addListener(listener: DeepStateListener) {\n    if (!this.listenersById[listener.id]) {\n      this.listenersById[listener.id] = listener;\n    }\n  }\n\n  createListenerId() {\n    return this.lastListenerId++;\n  }\n\n  getListeners() {\n    return this.listenersById;\n  }\n\n  getListener(listenerId: number): DeepStateListener | undefined {\n    return this.listenersById[listenerId];\n  }\n\n  destroyListener(listener: DeepStateListener) {\n    listener.deactivate();\n    delete this.listenersById[listener.id];\n  }\n\n  destroy() {\n    this.listenersById = {};\n  }\n}\n\nexport default DeepStateObserverCore;\n","import DeepStateObserverCore from \"./core\";\nimport DeepStateListener from \"./listener\";\n\nclass DeepStateObserver {\n  private core: DeepStateObserverCore;\n\n  constructor(data: object = {}) {\n    this.core = new DeepStateObserverCore(data);\n  }\n\n  createDataListener(listenerName: string) {\n    return this.core.createListener(listenerName);\n  }\n\n  getCore() {\n    return this.core;\n  }\n\n  destroy() {\n    return this.core.destroy();\n  }\n}\n\nexport default DeepStateObserver;\nexport * from \"./core\";\nexport * from \"./listener\";\nexport { DeepStateObserverCore, DeepStateListener, DeepStateObserver };\n"],"names":[],"mappings":"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"}